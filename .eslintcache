[{"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\index.js":"1","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\serviceWorker.js":"2","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\App.js":"3","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\AboutThis.js":"4","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\howitworks.component.js":"5","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\signup.component.js":"6","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\nav.js":"7","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\home.jsx":"8","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\DeviceData.js":"9","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\landingPage\\landingPage.js":"10","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\actions\\authActions.js":"11","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\actions\\definitions.js":"12","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\ultilities\\setAuthenicatedToken.js":"13","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\store\\store.js":"14","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\reducers\\index.js":"15","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\reducers\\authReducer.js":"16","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\reducers\\errReducer.js":"17","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\register\\register.js":"18","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\privateRoutes\\privateRoute.js":"19","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\login\\login.js":"20","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\ImageUpload.js":"21"},{"size":590,"mtime":1607337348124,"results":"22","hashOfConfig":"23"},{"size":5086,"mtime":499162500000,"results":"24","hashOfConfig":"23"},{"size":2483,"mtime":1607405626183,"results":"25","hashOfConfig":"23"},{"size":1060,"mtime":1607240456915,"results":"26","hashOfConfig":"23"},{"size":487,"mtime":1607238149948,"results":"27","hashOfConfig":"23"},{"size":1675,"mtime":1603516654727,"results":"28","hashOfConfig":"23"},{"size":2695,"mtime":1607339045979,"results":"29","hashOfConfig":"23"},{"size":1989,"mtime":1607240720194,"results":"30","hashOfConfig":"23"},{"size":1830,"mtime":1607241293568,"results":"31","hashOfConfig":"23"},{"size":2568,"mtime":1607335516583,"results":"32","hashOfConfig":"23"},{"size":2434,"mtime":1607335488808,"results":"33","hashOfConfig":"23"},{"size":326,"mtime":1607335488824,"results":"34","hashOfConfig":"23"},{"size":370,"mtime":1607335664022,"results":"35","hashOfConfig":"23"},{"size":545,"mtime":1607335571546,"results":"36","hashOfConfig":"23"},{"size":352,"mtime":1607335561488,"results":"37","hashOfConfig":"23"},{"size":1186,"mtime":1607335561453,"results":"38","hashOfConfig":"23"},{"size":452,"mtime":1607335561468,"results":"39","hashOfConfig":"23"},{"size":10631,"mtime":1607338604299,"results":"40","hashOfConfig":"23"},{"size":592,"mtime":1607335610854,"results":"41","hashOfConfig":"23"},{"size":4086,"mtime":1607335664402,"results":"42","hashOfConfig":"23"},{"size":4684,"mtime":1607407200761,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"dy2v27",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"46"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\index.js",[],["93","94"],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\serviceWorker.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\App.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\AboutThis.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\howitworks.component.js",["95"],"import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport '../App.css'\r\n//import './signup.css'\r\n\r\nexport default class HIW  extends Component{\r\n    render() {\r\n        return (\r\n            <div class = \"centeredtext\">\r\n            <h1>\r\n               ECE 178 Project Embedded Systems Site\r\n            </h1>\r\n            \r\n            <p1 >\r\n                  This is a test site constructed for 178.\r\n            </p1>\r\n            </div>\r\n        )\r\n      }\r\n}\r\n","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\signup.component.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\nav.js",["96","97","98","99"],"import React, { Component, Fragment } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\n\r\n\r\n\r\nclass navbar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      role: \"\", \r\n      errors: {},\r\n      search: \"\"\r\n    };\r\n  }\r\n  static propTypes = { \r\n    auth: PropTypes.object.isRequired\r\n  }\r\n  componentDidMount() { \r\n    if (this.props.auth.isAuthenticated) {\r\n      const { user } = this.props.auth; \r\n      this.setState({role: user.role}); \r\n    }\r\n    else{\r\n      this.setState({role:\"guest\"});\r\n    }\r\n  }\r\n  render() {\r\n    const { isAuthenticated } = this.props.auth; \r\n    const userLink = ( // user roles\r\n      <Fragment>\r\n         <Nav className=\"ml-auto\">\r\n          <Nav.Link href=\"http://localhost:3000/tstupload\" hidden = {this.state.role === \"nothing\"}>Add an image</Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/viewyouruploads\" hidden = {this.state.role === \"student\"}>View Your Uploads</Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/landingPage\">Profile</Nav.Link>      \r\n        </Nav>\r\n     </Fragment>\r\n    )\r\n    \r\n    const guestLink = ( //guest roles \r\n      <Fragment>\r\n         <Nav className=\"ml-auto\">\r\n          <Nav.Link href=\"http://localhost:3000/register\">Register</Nav.Link>\r\n          <Nav.Link href=\"http://localhost:3000/login\">Login</Nav.Link>\r\n          </Nav>\r\n      </Fragment>\r\n    )\r\n    return(\r\n        <Navbar bg=\"light\" expand=\"lg\">\r\n        <Navbar.Brand href=\"http://localhost:3000/home\">ECE 178 Embedded System</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"http://localhost:3000/aboutthis\">About this Project and Us</Nav.Link>\r\n            <Nav.Link href=\"http://localhost:3000/howitworks\">How It Works</Nav.Link>\r\n            <Nav.Link href=\"http://localhost:3000/dataDevices\">Devices Data Logging</Nav.Link>\r\n          </Nav>\r\n          {isAuthenticated ? userLink:guestLink}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nnavbar.propTypes = {\r\n  auth: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  auth: state.auth,\r\n  errors: state.errors, \r\n  role: state.role\r\n});\r\nexport default connect(mapStateToProps)(navbar);","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\home.jsx",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\DeviceData.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\landingPage\\landingPage.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\actions\\authActions.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\actions\\definitions.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\ultilities\\setAuthenicatedToken.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\store\\store.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\reducers\\index.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\reducers\\authReducer.js",["100"],"import {set_current_user, user_loading} from \"../actions/definitions\"; \r\n\r\n//const isEmpty = require ('is-empty');\r\n\r\n// in our reducer, we have to set our intial state for the tree. \r\n// in a way, this is pretty much our constructor. \r\nconst initialState = { \r\n    isAuthenticated: false, \r\n    user: {}, \r\n    loading: false, \r\n}; \r\n\r\nexport default function(state = initialState, action) { \r\n    // the reason why we need a switch statement here is to determine how the state should change\r\n    // based on actions given. \r\n    console.log({state, action});\r\n    switch(action.type){ \r\n        // case for when user logs in, we will acknowledge that we are authenticated and have recieved a payload. \r\n        case set_current_user: \r\n            return { \r\n                ...state, \r\n                isAuthenticated: true, \r\n                loading: false, \r\n                user: action.payload\r\n            }; \r\n        // case for taking care of the loading of the user. \r\n        case user_loading: \r\n            return { \r\n                ...state, \r\n                loading:true\r\n            };\r\n        \r\n            \r\n        default: \r\n            return state; \r\n    }\r\n}",["101","102"],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\reducers\\errReducer.js",["103"],"import { get_errors } from \"../actions/definitions\"; \r\n\r\n// this reducer takes care of the scenario in which one of our actions that we have are an error. \r\n\r\n\r\nconst initialState = {};  // creates empty state\r\n\r\nexport default function(state = initialState, action) {\r\n    // switch statement for error actions. \r\n    switch (action.type) {\r\n      case get_errors:\r\n        return action.payload;\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n\r\n","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\register\\register.js",["104","105"],"import React, {Component} from \"react\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport {connect} from \"react-redux\";\r\nimport {registerUser} from \"../actions/authActions\";\r\nimport classnames from \"classnames\";\r\nimport {ButtonToggle, Form, FormGroup } from 'reactstrap';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Dropdown from 'react-bootstrap/Dropdown';\r\nclass Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.onSubmit.bind(this);\r\n\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            address: \"\",\r\n            phone_number: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            role: \"\",\r\n            errors: {}\r\n        }\r\n    }\r\n    componentDidMount() { // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"/landingPage\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n            this.setState({errors: nextProps.errors});\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.id]: e.target.value})\r\n    }\r\n    check = e =>{\r\n        console.log(this.state.role);\r\n    }\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            address: this.state.address,\r\n            phone_number: this.state.phone_number,\r\n            password: this.state.password,\r\n            password2: this.state.password2,\r\n            role: this.state.role\r\n        };\r\n\r\n        this.props.registerUser(newUser, this.props.history);\r\n        /*\r\naxios.post('http://localhost:5000/routes/users/register', newUser)\r\n    .then(res=>{\r\n      console.log(res.data)\r\n      if(res.data === \"User added!\"){\r\n        window.location = '/home';\r\n      }\r\n      else{\r\n        window.location = '/register';\r\n      }\r\n    })\r\n    */\r\n        console.log(newUser);\r\n\r\n    };\r\n\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        return (\r\n            <div>\r\n                <div className=\"row\">\r\n                    <div className=\"col s8 offset-s2\">\r\n                        <Link to=\"/home\" className=\"btn-flat waves-effect\">\r\n                        <i className=\"material-icons left already\">Back Home</i>      \r\n                        </Link>\r\n                            <h2 className=\"text-center\">\r\n                                <b>Register </b>\r\n                                 with us\r\n                            </h2>\r\n                        <Form className=\"sign-up-form\" noValidate\r\n                            onSubmit={\r\n                                this.onSubmit\r\n                        }>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"name\">Name</label>\r\n                                <br />\r\n                                <input onChange={\r\n                                        this.onChange\r\n                                    }\r\n                                    value={\r\n                                        this.state.name\r\n                                    }\r\n                                    error={\r\n                                        errors.name\r\n                                    }\r\n                                    id=\"name\"\r\n                                    type=\"text\"\r\n                                    placeholder=\"Your Full Name\"\r\n                                    className={\r\n                                        classnames(\"\", {invalid: errors.name})\r\n                                    }/>\r\n                                <span className=\"red-text\">\r\n                                    {\r\n                                    errors.name\r\n                                }</span>\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <label htmlFor=\"email\">Email</label>\r\n                                <br />\r\n                                <input onChange={\r\n                                        this.onChange\r\n                                    }\r\n                                    value={\r\n                                        this.state.email\r\n                                    }\r\n                                    error={\r\n                                        errors.email\r\n                                    }\r\n                                    id=\"email\"\r\n                                    type=\"email\"\r\n                                    className={\r\n                                        classnames(\"\", {invalid: errors.email})\r\n                                    }/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label htmlFor=\"address\">Address</label>\r\n                                <br />\r\n                                <input onChange={\r\n                                        this.onChange\r\n                                    }\r\n                                    value={\r\n                                        this.state.address\r\n                                    }\r\n                                    error={\r\n                                        errors.address\r\n                                    }\r\n                                    id=\"address\"\r\n                                    type=\"address\"\r\n                                    className={\r\n                                        classnames(\"\", {invalid: errors.email})\r\n                                    }/>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label htmlFor=\"phone_number\">Phone Number</label>\r\n                                <br />\r\n                                <input onChange={\r\n                                        this.onChange\r\n                                    }\r\n                                    value={\r\n                                        this.state.phone_number\r\n                                    }\r\n                                    error={\r\n                                        errors.phone_number\r\n                                    }\r\n                                    id=\"phone_number\"\r\n                                    type=\"phone_number\"\r\n                                    className={\r\n                                        classnames(\"\", {invalid: errors.phone_number})\r\n                                    }/>\r\n                            </FormGroup>\r\n\r\n\r\n                            <FormGroup>\r\n                                <label htmlFor=\"password\">Password</label>\r\n                                <br />\r\n                                <input onChange={\r\n                                        this.onChange\r\n                                    }\r\n                                    value={\r\n                                        this.state.password\r\n                                    }\r\n                                    error={\r\n                                        errors.password\r\n                                    }\r\n                                    id=\"password\"\r\n                                    type=\"password\"\r\n                                    className={\r\n                                        classnames(\"\", {invalid: errors.password})\r\n                                    }/>\r\n                                <span className=\"red-text\">\r\n                                    {\r\n                                    errors.name\r\n                                }</span>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup>\r\n                                <label htmlFor=\"password2\">Confirm Password</label>\r\n                                <br />\r\n                                <input onChange={\r\n                                        this.onChange\r\n                                    }\r\n                                    value={\r\n                                        this.state.password2\r\n                                    }\r\n                                    error={\r\n                                        errors.password2\r\n                                    }\r\n                                    id=\"password2\"\r\n                                    type=\"password\"/>\r\n                                <span className=\"red-text\">\r\n                                    {\r\n                                    errors.name\r\n                                }</span>\r\n                            </FormGroup>\r\n\r\n\r\n                            <FormGroup>\r\n                                <label htmlFor=\"role\">Who are You?</label>\r\n                                <br />\r\n                                <select value={this.state.role} id = \"role\" onChange={this.onChange}>\r\n                                    <option>Please select an option</option>\r\n                                    <option value=\"student\">Student</option>\r\n                                    <option value=\"admin\">Admin</option>\r\n                                    <option value=\"Raeisi\">Dr. Raeisi</option>\r\n                                </select>\r\n                            </FormGroup>\r\n                                <br/>\r\n                            <Button className=\"btn-block\" variant=\"outline-success\" type=\"submit\">\r\n                                {'Sign Up'} </Button>\r\n                            <div className=\"text-center\">\r\n                                Already have an account? <Link className=\"already\" to=\"/login\"> Log in</Link>\r\n                            </div>\r\n                        </Form>\r\n                        <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                            <br/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n} Register.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({auth: state.auth, errors: state.errors});\r\n\r\nexport default connect(mapStateToProps, {registerUser})(withRouter(Register));\r\n","C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\privateRoutes\\privateRoute.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\login\\login.js",[],"C:\\ECE178\\ECE178_ESP8266_Project\\website\\src\\components\\ImageUpload.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":2,"column":8,"nodeType":"112","messageId":"113","endLine":2,"endColumn":13},{"ruleId":"110","severity":1,"message":"114","line":7,"column":8,"nodeType":"112","messageId":"113","endLine":7,"endColumn":19},{"ruleId":"110","severity":1,"message":"115","line":8,"column":8,"nodeType":"112","messageId":"113","endLine":8,"endColumn":14},{"ruleId":"110","severity":1,"message":"116","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":12},{"ruleId":"110","severity":1,"message":"117","line":10,"column":8,"nodeType":"112","messageId":"113","endLine":10,"endColumn":19},{"ruleId":"118","severity":1,"message":"119","line":13,"column":1,"nodeType":"120","endLine":37,"endColumn":2},{"ruleId":"106","replacedBy":"121"},{"ruleId":"108","replacedBy":"122"},{"ruleId":"118","severity":1,"message":"119","line":8,"column":1,"nodeType":"120","endLine":16,"endColumn":4},{"ruleId":"110","severity":1,"message":"123","line":7,"column":9,"nodeType":"112","messageId":"113","endLine":7,"endColumn":21},{"ruleId":"110","severity":1,"message":"124","line":9,"column":8,"nodeType":"112","messageId":"113","endLine":9,"endColumn":16},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'NavDropdown' is defined but never used.","'Button' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration",["125"],["126"],"'ButtonToggle' is defined but never used.","'Dropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]